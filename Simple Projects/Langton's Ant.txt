let width    = 700;
let height   = 700;
let cellSize = 2;
let dir = 0; // start up
let iterationsPerFrame = 100;
let numIterations = 0;
let updateCellUsingMouse = false;
let showNumIterations = true;

let grid;
let directions = [
  [ 0,  1], // up
  [ 1,  0], // right
  [ 0, -1], // down
  [-1,  0]  // left
];
let cols = Math.floor(width / cellSize);
let rows = Math.floor(height / cellSize);
let antX = Math.floor(cols/2);
let antY = Math.floor(rows/2);
let paused = false;

function setup() {
  createCanvas(width, height);
  grid = createGrid();
  textAlign(RIGHT, BOTTOM);
  textSize(16);
}

function draw() {
  if(!paused) {
    background(0);

    for(let k=0; k<iterationsPerFrame; k++){
      updateAnt();
    }

    for(let i=0; i<cols; i++) {
      for(let j=0; j<rows; j++) {
        drawCells(i, j);
      }
    }
    
    numIterations += iterationsPerFrame;
    drawNumIterations();
    drawAnt();
  }
}

function createGrid() {
  let grid = [];
  for(let i=0; i<cols; i++) {
    grid[i] = new Array(rows).fill(false);
  }
  return grid;
}

function mouseDragged() {
  if(updateCellUsingMouse && i >= 0 && i < cols && j >= 0 && j < rows) {
    let i = Math.floor(mouseX / cellSize);
    let j = Math.floor(mouseY / cellSize);
    if(mouseButton == LEFT) grid[i][j] = true;
    else grid[i][j] = false;
  }
}

function mousePressed() {
  if(updateCellUsingMouse && i >= 0 && i < cols && j >= 0 && j < rows) {
    let i = Math.floor(mouseX / cellSize);
    let j = Math.floor(mouseY / cellSize);
    if(mouseButton == LEFT) grid[i][j] = true;
    else grid[i][j] = false;
  }
  if(!updateCellUsingMouse) {
    paused = !paused;
  }
}

function drawCells(i, j) {
  
  // for cells
  if(grid[i][j]) fill(200);
  else noFill();
  
  // drawing
  noStroke();
  rect(i*cellSize, j*cellSize, cellSize, cellSize);
}

function updateAnt() {
  
  let state = grid[antX][antY];
  
  // white cell
  if(state) dir = (dir + 1) % 4;
  // black cell
  else dir = (dir + 3) % 4;
  
  grid[antX][antY] = !grid[antX][antY];
  
  antX = (antX + cols + directions[dir][0]) % cols;
  antY = (antY + rows + directions[dir][1]) % rows;
  
}

function drawAnt() {
  noStroke();
  fill(255, 50, 50);
  rect(antX * cellSize, antY * cellSize, cellSize, cellSize);
  noFill();
}

function drawNumIterations() {
  if(showNumIterations) {
    let txt = numIterations.toString();
    let tw = textWidth(txt) + 10;
    let th = textAscent() + textDescent() + 6;

    // draw bg rect
    noStroke();
    fill(0, 0, 0, 200);
    rect(width - tw, height - th, tw, th);

    // draw text
    fill(255, 50, 50);
    text(txt, width - 5, height - 5);
  }
}
